{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialog","dialogsItems","messages","message","active","DialogItem","props","path","id","react_default","a","createElement","className","concat","s","src","require","alt","react_router_dom","to","name","Message","AddMessageForm","formik_esm","initialValues","onSubmit","values","_ref","setSubmitting","sendMessage","_ref2","handleChange","handleBlur","handleSubmit","isSubmitting","type","onChange","onBlur","value","placeholder","disabled","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","isAuth","Dialogs_AddMessageForm","react_router","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","React","connect","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/1.a80cbba0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__21A4g\",\"dialog\":\"Dialogs_dialog__2juTJ\",\"dialogsItems\":\"Dialogs_dialogsItems__1CbgA\",\"messages\":\"Dialogs_messages__2kQ1F\",\"message\":\"Dialogs_message__qFJ-g\",\"active\":\"Dialogs_active__1OoSp\"};","import React from \"react\"\r\nimport s from \"./../Dialogs.module.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialogs/\" + props.id\r\n\r\n\treturn (\r\n\t\t<div className={`${s.dialog}`}>\r\n\t\t\t<img src={require(\"../../../img/user-icon.png\")} alt='' />\r\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem\r\n","import React from \"react\"\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n\treturn <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\"\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport Message from \"./Message/Message\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Formik} from \"formik\";\r\nimport styles from \"../Login/Login.module.css\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n   let state = props.dialogsPage\r\n\r\n   let dialogsElements = state.dialogs.map((d) => (\r\n      <DialogItem name={d.name} key={d.id} id={d.id}/>\r\n   ))\r\n\r\n   let messagesElements = state.messages.map((m) => (\r\n      <Message message={m.message} key={m.id}/>\r\n   ))\r\n\r\n   if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItems}>{dialogsElements}</div>\r\n         <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n         </div>\r\n         <AddMessageForm sendMessage={props.sendMessage}/>\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <Formik\r\n         initialValues={{message: ''}}\r\n         onSubmit={(values, {setSubmitting}) => {\r\n            props.sendMessage(values.message)\r\n            values.message = ''\r\n            setSubmitting(false)\r\n         }}\r\n      >\r\n         {({\r\n              values,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting\r\n           }) => (\r\n            <form onSubmit={handleSubmit}>\r\n               <textarea\r\n                  type=\"message\"\r\n                  name=\"message\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.message}\r\n                  placeholder=\"Enter your message\"\r\n               />\r\n               <button type=\"submit\" disabled={isSubmitting}>\r\n                  Send\r\n               </button>\r\n            </form>\r\n         )}\r\n      </Formik>\r\n   )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n         return <Component {...this.props}/>\r\n      }\r\n   }\r\n\r\n   return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\nexport default withAuthRedirect","import {sendMessageCreator} from \"../../redux/dialogs-reducer\"\r\nimport {connect} from \"react-redux\"\r\nimport Dialogs from \"./Dialogs\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendMessage: (message) => {\r\n         dispatch(sendMessageCreator(message))\r\n      }\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Dialogs)\r\n\r\n// const DialogsContainer = () => {\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{(store) => {\r\n// \t\t\t\tlet onSendMessageClick = () => {\r\n// \t\t\t\t\tstore.dispatch(sendMessageCreator())\r\n// \t\t\t\t}\r\n// \t\t\t\tlet onNewMessageChange = (body) => {\r\n// \t\t\t\t\tstore.dispatch(updateNewMessageBodyCreator(body))\r\n// \t\t\t\t}\r\n// \t\t\t\treturn (\r\n// \t\t\t\t\t<Dialogs\r\n// \t\t\t\t\t\tsendMessage={onSendMessageClick}\r\n// \t\t\t\t\t\tupdateNewMessageBody={onNewMessageChange}\r\n// \t\t\t\t\t\tdialogsPage={store.getState().dialogsPage}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t)\r\n// \t\t\t}}\r\n// \t\t</StoreContext.Consumer>\r\n// \t)\r\n// }\r\n"],"sourceRoot":""}